# 此文件禁止自动格式化，否则会出现语法错误

# 禁止构建normal release版本，可能会覆盖上传到Google的mapping
name: Build floss release CI

on:
  push:
    branches: [ master ]
    paths:
    - 'app/**'
    - '.github/workflows/*.yml'
    - 'gradle.properties'
    - '*.gradle'
    - '!/**/*.md'
  pull_request:
    branches: [ master ]
    paths-ignore:
    - '*.md'
    - 'LICENSE'

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'ryuunoakaihitomi' # 禁用fork上的CI

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

      # https://stackoverflow.com/questions/53838363/the-security-strength-of-sha-1-digest-algorithm-is-not-sufficient-for-this-key
    - name: Generate signing info
      run: |
        keytool -genkey -alias a -dname CN=_ -storepass passwd -keypass passwd -keysize 1024 -keystore android.keystore
        echo KEY_ALIAS=a >> signInfo.properties
        echo KEY_PWD=passwd >> signInfo.properties
        echo STORE_PWD=passwd >> signInfo.properties
        echo STORE_FILE=$(pwd)/android.keystore >> signInfo.properties

      # https://developer.android.google.cn/studio/releases/gradle-plugin#updating-gradle
    - name: Install gradle wrapper
      env:
        GRADLE_VERSION: 7.0.2
      run : gradle wrapper --gradle-version $GRADLE_VERSION

    - name: Build
      run: ./gradlew assembleFlossRelease --stacktrace

      # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md#android
    - name: Check apk
      env:
        BUILD_TOOLS_VERSION: 30.0.3
      run: |
        export APK_PATH=$(find ./app/build/outputs/apk/floss/release/ -maxdepth 1 -name *.apk)
        export PATH=$PATH:$ANDROID_SDK_ROOT/build-tools/$BUILD_TOOLS_VERSION
        export REPORT=aapt_report.txt
        echo "===AAPT LIST===" >> $REPORT
        aapt list -a -v $APK_PATH >> $REPORT
        echo ===BADGING=== >> $REPORT
        aapt2 dump badging $APK_PATH >> $REPORT
        echo ===PERMISSIONS=== >> $REPORT
        aapt2 dump permissions $APK_PATH >> $REPOET # 不仅包括uses-permission（权限中badging只输出这项）还有自定义permission
        echo ===STRINGS=== >> $REPORT
        aapt2 dump strings $APK_PATH >> $REPORT
        echo ===RESOURCES=== >> $REPORT
        aapt2 dump resources $APK_PATH >> $REPORT
        echo ===CONFIGURATIONS=== >> $REPORT
        aapt2 dump configurations $APK_PATH >> $REPORT

    - name: Upload apk
      uses: actions/upload-artifact@v2
      with:
        name: PowerPanel_apk_${{ github.sha }}
        path: app/build/outputs/apk/floss/release/*.apk
        if-no-files-found: error

    - name: Upload mappings
      uses: actions/upload-artifact@v2
      with:
        name: PowerPanel_mappings_${{ github.sha }}
        path: |
          app/build/outputs/mapping/flossRelease
          aapt_report.txt
        if-no-files-found: error
